
#---Carregando os pacotes necessários----

library(dplyr) # manipulação e variáveis
library(naniar) # trabalhar com missing data (NA - not annotated)
library(report) # gerar tabelas descritivas (media, mediana, número de casos...)
library(stringr) # trabalhar com variaveis texto para procurar espaços extras
library(purrr) # uma função map.
library(forcats) # manipulação de níveis de variáveis.

#---Importanto o banco de dados----

metabric = read.csv("data/metabric.csv")

#---Remoção de duplicatas----

metabric <- metabric %>%
  distinct()

metabric <- metabric %>%
  distinct(Patient.ID, Sample.ID, .keep_all = T)

#---Inspeção inicial os dados----

glimpse(metabric) %>% capture.output(file = 'glimpse.txt')
paste(1:ncol(metabric),':',colnames(metabric)) %>% capture.output(file = 'nomes_colunas')

metabric %>% select_if(is.character) %>% map(table) %>% capture.output(file = 'rótulos variáveis.txt')


#---Tratamento, análise e verificação dos valores ausentes----

miss_var_summary(metabric)
gg_miss_var(metabric)

metabric_complete = metabric %>% filter(complete.cases(.))
sum(is.na(metabric_complete))

metabric %>% filter(!is.na(Mutation.Count))

#---Correção das classes de variáveis---

#---Transformação das variáveis texto em categóricas---

metabric <- metabric %>% mutate(
  across(where(is.character),as.factor)
)
glimpse(metabric)

#---Remoção de variáveis(colunas) que não serão utilizadas----

metabric <-  metabric %>% select(-c(1:4))
glimpse(metabric)

removido_colunas <- metabric %>%
  select(-Tipo.de.cirurgia.da.mama, -Estado.vital.do.paciente)

selecionado_colunas = metabric %>% select(c(4:8),12,14)
glimpse(metabric)

#---Renomear colunas----
metabric <- metabric %>%
  rename(
    Idade = Idade.no.Diagnóstico,
    `Faixa etária` = Grupos.etários
  )

paste(1:ncol(metabric),':',colnames(metabric)) %>% capture.output(file = 'nomes_colunas')

##---Transformação de dados----

###---Tratando variáveis de texto----

metabric = metabric %>% mutate(across(where(is.character), str_trim)) # remoção de espaços extras.
head(metabric)

###---Filtragem----

selecionado = metabric %>% filter(
  Hormonioterapia == 'YES',
  Idade > 30
)
selecionado

metabric %>% filter(
  Radioterapia == 'NO', Quimioterapia == 'NO',`Idade.no.Diagnóstico` > 60
) %>% nrow

table(metabric$Radioterapia); table(metabric$Quimioterapia)

#### ---Filtragem seguido da criação de uma tabela de frequência---
metabric %>% filter(
  Hormonioterapia == 'YES'
) %>% select(ER.Status) %>% map(~prop.table(table(.))*100)

metabric %>% filter(
  Hormonioterapia == 'YES'
) %>% 
  select(ER.status.mensurado.por.IHC) %>% 
  map(~prop.table(table(.))*100)

metabric %>% filter(
  Hormonioterapia == 'YES'
) %>% 
  select(ER.status.mensurado.por.IHC) %>% 
  map(Desc)

###---Agrupamento e sumarização----

cirurgia_idade_resumo <- metabric %>%
  group_by(Tipo.de.cirurgia.da.mama) %>%
  summarise(`Média Idade` = mean(Idade.no.Diagnóstico, na.rm = TRUE))

###----Criação de novas variáveis----
metabric <- metabric %>%
  mutate(`Faixa Etária Detalhada` = case_when(
    Idade.no.Diagnóstico < 40 ~ '<40',
    Idade.no.Diagnóstico >= 40 & Idade.no.Diagnóstico <= 59 ~ '40-59',
    Idade.no.Diagnóstico >= 60 & Idade.no.Diagnóstico <= 69 ~ '60-69',
    Idade.no.Diagnóstico >= 70 ~ '70+'
  ))

###---Trabalhando com os níveis das variáveis categóricas---

#### Identificando e olhando as frequências dos níveis das variáveis categóricas

metabric %>%
  select_if(is.character) %>%
  map(fct_count)

####---Renomeando níveis da variável categórica----

metabric <- metabric %>%
  mutate(`Estado vital do paciente` = recode(
    Estado.vital.do.paciente,
    Living = "Vivo",
    `Died of Disease` = "Morto por Doença"
  ))
table(níveis_renomeados_metabric$`Estado vital do paciente`)

###---Visualizando os dados---

####---Estatística descritiva---

library(rstatix)
library(pastecs)
library(DescTools)

metabric %>% select_if(is.numeric) %>% Desc() # Fazendo com a função Desc do DescTool.

estat_desc  <-  metabric %>% select_if(is.numeric) %>% select(-n.,-status_num) %>% get_summary_stats() # Fazendo com a função do get_summary_stats do rstatix.

estat_desc  <-  metabric %>% select_if(is.numeric) %>% select(-n.,-status_num) %>% stat.desc(basic = F, norm = T) # Fazendo com a função stat.desc do pastecs. Tem normalidade, assimetria e curtose.

round(estat_desc,2) # função round para arrendondamento.

capture.output(round(estat_desc,3),file = 'resultados/estatistica descritiva.txt')   


####---Visualização gráficos---

library(ggpubr)

ggboxplot(
  metabric, x = 'Quimioterapia', y = 'Idade.no.Diagnóstico'
)

variáveis_x <- c('Quimioterapia', 'Hormonioterapia', 'Radioterapia', 'ER.Status', 'Estágio.do.tumor', 'Grupos.de.estadiamento')

plot <- list()

for (x_var in variáveis_x) {
  p <- ggboxplot(
    metabric,
    x = x_var,
    y = 'Idade.no.Diagnóstico',
    outlier.shape = NA,
    bxp.errorbar = T,
    add = 'jitter'
  )
  plot[[x_var]] <- p
}

library(patchwork)
multipli_plots <- wrap_plots(plot)









